"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[2976],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(n),f=o,g=p["".concat(l,".").concat(f)]||p[f]||c[f]||a;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},44164:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={title:"4) Testing the End-to-End Workflow"},i=void 0,s={unversionedId:"message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README",id:"message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README",title:"4) Testing the End-to-End Workflow",description:"Now that we have deployed all the relevant contracts, it's time to test them out.",source:"@site/docs/develop/message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README.md",sourceDirName:"message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow",slug:"/message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow/",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow/",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/develop/message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README.md",tags:[],version:"current",frontMatter:{title:"4) Testing the End-to-End Workflow"},sidebar:"tutorialSidebar",previous:{title:"3) Deploying a Sample Bridge Contract",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/deploying-a-sample-bridge-contract"},next:{title:"Sending an Inbound Request",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/your-first-omnichain-dapp/testing-the-end-to-end-workflow/sending-an-inbound-request"}},l={},d=[{value:"Testing the Inbound Flow",id:"testing-the-inbound-flow",level:2},{value:"Testing the Outbound and Outbound Ack Flow",id:"testing-the-outbound-and-outbound-ack-flow",level:2}],u={toc:d};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Now that we have deployed all the relevant contracts, it's time to test them out."),(0,o.kt)("h2",{id:"testing-the-inbound-flow"},"Testing the Inbound Flow"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1)")," Send a message string from the ",(0,o.kt)("strong",{parentName:"p"},"HelloRouter.sol")," contract to the Gateway contract on the Router EVM Devnet. To do this, follow the guide given ",(0,o.kt)("a",{parentName:"p",href:"./sending-an-inbound-request"},"here"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2)")," Follow the guide given ",(0,o.kt)("a",{parentName:"p",href:"./verifying-the-inbound-request"},"here")," to verify the state change of the bridge contract following the delivery of the inbound request to the Router chain."),(0,o.kt)("h2",{id:"testing-the-outbound-and-outbound-ack-flow"},"Testing the Outbound and Outbound Ack Flow"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1)")," Verify the state change of the application contract following the delivery of the outbound request to the destination chain. To do this, follow the guide given ",(0,o.kt)("a",{parentName:"p",href:"./verifying-the-outbound-request"},"here"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2)")," Follow the guide given ",(0,o.kt)("a",{parentName:"p",href:"./verifying-the-outbound-ack"},"here")," to verify the state change of the bridge contract following the delivery of the outbound acknowledgment to the Router chain."))}c.isMDXComponent=!0}}]);