"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[5583],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6467:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={title:"i_ack",sidebar_position:4},o="i_ack Function",c={unversionedId:"message-transfer-via-crosstalk/near-guides/iDapp-functions/i_ack",id:"message-transfer-via-crosstalk/near-guides/iDapp-functions/i_ack",title:"i_ack",description:"Once the i_receive function is executed, an acknowledgment is generated from Router's destination chain Gateway contract, which will specify whether the calls were successful. We need to implement an i_ack function in our contract with the following schema:",source:"@site/docs/develop/message-transfer-via-crosstalk/near-guides/iDapp-functions/i_ack.md",sourceDirName:"message-transfer-via-crosstalk/near-guides/iDapp-functions",slug:"/message-transfer-via-crosstalk/near-guides/iDapp-functions/i_ack",permalink:"/develop/message-transfer-via-crosstalk/near-guides/iDapp-functions/i_ack",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/develop/message-transfer-via-crosstalk/near-guides/iDapp-functions/i_ack.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"i_ack",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"i_receive",permalink:"/develop/message-transfer-via-crosstalk/near-guides/iDapp-functions/i_receive"},next:{title:"set_dapp_metadata",permalink:"/develop/message-transfer-via-crosstalk/near-guides/iDapp-functions/set_dapp_metadata"}},s={},l=[{value:"1) <code>request_identifier</code>",id:"1-request_identifier",level:3},{value:"2) <code>exec_flag</code>",id:"2-exec_flag",level:3},{value:"3) <code>exec_data</code>",id:"3-exec_data",level:3}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"i_ack-function"},(0,r.kt)("inlineCode",{parentName:"h1"},"i_ack")," Function"),(0,r.kt)("p",null,"Once the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"i_receive"))," function is executed, an acknowledgment is generated from Router's destination chain Gateway contract, which will specify whether the calls were successful. We need to implement an ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"i_ack"))," function in our contract with the following schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"fn i_ack(&self, request_identifier: U128, exec_flag: bool, exec_data: Vec<u8>);\n")),(0,r.kt)("p",null,"You need to handle the acknowledgment inside this function. This function receives the following params:"),(0,r.kt)("h3",{id:"1-request_identifier"},"1) ",(0,r.kt)("inlineCode",{parentName:"h3"},"request_identifier")),(0,r.kt)("p",null,"This is the same nonce you receive while calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"i_send()")," function on the source chain Gateway contract. Using this nonce, you can map the acknowledgment to a particular request."),(0,r.kt)("h3",{id:"2-exec_flag"},"2) ",(0,r.kt)("inlineCode",{parentName:"h3"},"exec_flag")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"exec_flag")," is a boolean value that tells you the execution status of your request on destination chain."),(0,r.kt)("h3",{id:"3-exec_data"},"3) ",(0,r.kt)("inlineCode",{parentName:"h3"},"exec_data")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"exec_data")," parameter is the data in bytes that provides the abi-encoded return value from the ",(0,r.kt)("inlineCode",{parentName:"p"},"i_receive")," call on the destination chain. Based on the application's requirement, this data can be decoded and processed on the source chain."))}u.isMDXComponent=!0}}]);