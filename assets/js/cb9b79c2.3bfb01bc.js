"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[3642],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),y=a,f=d["".concat(s,".").concat(y)]||d[y]||p[y]||o;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},58823:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={},l="CrossTalkUtils Library",i={unversionedId:"crosstalkutils-library/README",id:"crosstalkutils-library/README",title:"CrossTalkUtils Library",description:"To make it easy to integrate Router CrossTalk in your contracts, we have created a CrossTalkUtils plug-and-play library. It gives you the following functionalities:",source:"@site/docs/crosstalk/crosstalkutils-library/README.md",sourceDirName:"crosstalkutils-library",slug:"/crosstalkutils-library/",permalink:"/crosstalk/crosstalkutils-library/",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/crosstalk/crosstalkutils-library/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multiple Calls with Acknowledgment",permalink:"/crosstalk/different-types-of-requests/multiple-calls-with-ack"},next:{title:"How to Use the CrossTalkUtils Library",permalink:"/crosstalk/crosstalkutils-library/how-to-use-the-crosstalkutils-library"}},s={},c=[],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"crosstalkutils-library"},"CrossTalkUtils Library"),(0,a.kt)("p",null,"To make it easy to integrate Router CrossTalk in your contracts, we have created a CrossTalkUtils plug-and-play library. It gives you the following functionalities:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Sending a single payload to a contract on the destination chain without an acknowledgement."),(0,a.kt)("li",{parentName:"ol"},"Sending a single payload to a contract on the destination chain while also handling an acknowledgement on the source chain."),(0,a.kt)("li",{parentName:"ol"},"Sending multiple payloads to different contracts on the destination chain without an acknowledgement."),(0,a.kt)("li",{parentName:"ol"},"Sending multiple payloads to different contracts on the destination chain while also handling an acknowledgement on the source chain."),(0,a.kt)("li",{parentName:"ol"},"Functions to convert type address to type bytes and vice-versa."),(0,a.kt)("li",{parentName:"ol"},"If your calls were atomic, either all the calls will execute or none will execute on the destination chain. In this case, when you receive the acknowledgement, you can use a function (",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"getTxStatusForAtomicCall")),") in the library to know whether the calls were executed on the destination chain. If, in case, your calls were not successful, you can call a function (",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"getTheIndexOfCallFailure")),") in the library to know the index of call which failed on the destination chain.")))}p.isMDXComponent=!0}}]);