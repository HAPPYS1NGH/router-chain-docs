"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[4791],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(n),g=o,k=d["".concat(c,".").concat(g)]||d[g]||u[g]||a;return n?r.createElement(k,s(s({ref:t},p),{},{components:n})):r.createElement(k,s({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var i=2;i<a;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},46706:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var r=n(87462),o=(n(67294),n(3905));const a={title:"Check and Set Allowances",sidebar_position:2},s=void 0,l={unversionedId:"tools/voyager-js-sdk/performing-cross-chain-transaction/check-set-allowance",id:"tools/voyager-js-sdk/performing-cross-chain-transaction/check-set-allowance",title:"Check and Set Allowances",description:"Getting Allowance",source:"@site/docs/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/check-set-allowance.md",sourceDirName:"tools/voyager-js-sdk/performing-cross-chain-transaction",slug:"/tools/voyager-js-sdk/performing-cross-chain-transaction/check-set-allowance",permalink:"/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/check-set-allowance",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/check-set-allowance.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Check and Set Allowances",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Request a Quote",permalink:"/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/request-quote"},next:{title:"Execute the Transaction",permalink:"/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/execute-transaction"}},c={},i=[{value:"Getting Allowance",id:"getting-allowance",level:2},{value:"Source Token Allowance",id:"source-token-allowance",level:3},{value:"Fee Token Allowance",id:"fee-token-allowance",level:3},{value:"Setting Approval",id:"setting-approval",level:2},{value:"Approving Source Token",id:"approving-source-token",level:3},{value:"Approving Fee Token",id:"approving-fee-token",level:3},{value:"Example",id:"example",level:2}],p={toc:i};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"getting-allowance"},"Getting Allowance"),(0,o.kt)("h3",{id:"source-token-allowance"},"Source Token Allowance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const src_token_allowance = await routerprotocol.getSourceTokenAllowance("TOKEN_ADDRESS", "DESTINATION_CHAIN_ID", "USER_ADDRESS")\n')),(0,o.kt)("h3",{id:"fee-token-allowance"},"Fee Token Allowance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const fee_token_allowancea = const fee_token_allowance = await routerprotocol.getFeeTokenAllowance("TOKEN_ADDRESS", "DESTINATION_CHAIN_ID", "USER_ADDRESS")\n')),(0,o.kt)("h2",{id:"setting-approval"},"Setting Approval"),(0,o.kt)("h3",{id:"approving-source-token"},"Approving Source Token"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'await routerprotocol.approveSourceToken("TOKEN_ADDRESS","USER_ADDRESS", "AMOUNT_TO_BE_APPROVED", "DESTINATION_CHAIN_ID", "SOURCE_SIGNER")\n')),(0,o.kt)("h3",{id:"approving-fee-token"},"Approving Fee Token"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'await routerprotocol.approveFeeToken("TOKEN_ADDRESS", "USER_ADDRESS", "AMOUNT_TO_BE_APPROVED", "SOURCE_SIGNER")\n')),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { RouterProtocol } from "@routerprotocol/router-js-sdk"\nimport { ethers } from "ethers";\n\nconst main = async() => {\n\n// initialize a RouterProtocol instance\n\n// setting the arguments for the cross-chain swap\nlet args = {\n    amount: (ethers.utils.parseUnits("10.0", 6)).toString(), // 10 USDC\n    dest_chain_id: 250, // Fantom\n    src_token_address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174", // USDC on Polygon\n    dest_token_address: "0x04068DA6C83AFCFA0e13ba15A6696662335D5B75", // USDC on Fantom\n    user_address: "YOUR_WALLET_ADDRESS",\n    fee_token_address: "0x16ECCfDbb4eE1A85A33f3A9B21175Cd7Ae753dB4", // ROUTE on Polygon\n    slippage_tolerance: 1.0\n}\n\n// getting allowance\nconst wallet = new ethers.Wallet("YOUR_PRIVATE_KEY", provider) // provider was set up while initializing an instance of RouterProtocol\n// use provider.getSigner() method to get a signer if you\'re using this for a UI\n\nlet src_token_allowance = await routerprotocol.getSourceTokenAllowance(args.src_token_address, args.dest_chain_id, args.user_address)\nif(src_token_allowance.lt(ethers.constants.MaxUint256)){\n        await routerprotocol.approveSourceToken(args.src_token_address, args.user_address, ethers.constants.MaxUint256, args.dest_chain_id, wallet)\n}\n\nif(ethers.utils.getAddress(args.src_token_address) !== ether.utils.getAddress(args.fee_token_address)){\n    let fee_token_allowance = await routerprotocol.getFeeTokenAllowance(args.fee_token_address, args.dest_chain_id, args.user_address)\n    if(fee_token_allowance.lt(ethers.constants.MaxUint256)){\n        await routerprotocol.approveFeeToken(args.fee_token_address, args.user_address, ethers.constants.MaxUint256, wallet)\n    }\n}\n\n}\n\nmain()\n')))}u.isMDXComponent=!0}}]);