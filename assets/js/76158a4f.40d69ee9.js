"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[3044],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=d(n),h=r,f=p["".concat(l,".").concat(h)]||p[h]||s[h]||i;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:r,a[1]=u;for(var d=2;d<i;d++)a[d]=n[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},49659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>s,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var o=n(87462),r=(n(67294),n(3905));const i={title:"4) Testing the End-to-End Workflow"},a=void 0,u={unversionedId:"guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README",id:"guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README",title:"4) Testing the End-to-End Workflow",description:"Now that we have deployed all the relevant contracts, it's time to test them out.",source:"@site/docs/omnichain-framework/guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README.md",sourceDirName:"guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow",slug:"/guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow/",permalink:"/omnichain-framework/guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow/",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/omnichain-framework/guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow/README.md",tags:[],version:"current",frontMatter:{title:"4) Testing the End-to-End Workflow"},sidebar:"tutorialSidebar",previous:{title:"3) Deploying a Sample Bridge Contract",permalink:"/omnichain-framework/guides/your-first-omnichain-dapp/deploying-a-sample-bridge-contract"},next:{title:"Sending an Inbound Request",permalink:"/omnichain-framework/guides/your-first-omnichain-dapp/testing-the-end-to-end-workflow/sending-an-inbound-request"}},l={},d=[{value:"Testing the Inbound Flow",id:"testing-the-inbound-flow",level:2},{value:"Testing the Outbound and Outbound Ack Flow",id:"testing-the-outbound-and-outbound-ack-flow",level:2}],c={toc:d};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Now that we have deployed all the relevant contracts, it's time to test them out."),(0,r.kt)("h2",{id:"testing-the-inbound-flow"},"Testing the Inbound Flow"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 1)")," Send a message string from the ",(0,r.kt)("strong",{parentName:"p"},"HelloRouter.sol")," contract to the Gateway contract on the Router EVM Devnet. To do this, follow the guide given ",(0,r.kt)("a",{parentName:"p",href:"./sending-an-inbound-request"},"here"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 2)")," Follow the guide given ",(0,r.kt)("a",{parentName:"p",href:"./verifying-the-inbound-request"},"here")," to verify the state change of the bridge contract following the delivery of the inbound request to the Router chain."),(0,r.kt)("h2",{id:"testing-the-outbound-and-outbound-ack-flow"},"Testing the Outbound and Outbound Ack Flow"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 1)")," Verify the state change of the application contract following the delivery of the outbound request to the destination chain. To do this, follow the guide given ",(0,r.kt)("a",{parentName:"p",href:"./verifying-the-outbound-request"},"here"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 2)")," Follow the guide given ",(0,r.kt)("a",{parentName:"p",href:"./verifying-the-outbound-ack"},"here")," to verify the state change of the bridge contract following the delivery of the outbound acknowledgment to the Router chain."))}s.isMDXComponent=!0}}]);