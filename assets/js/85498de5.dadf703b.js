"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[1721],{15800:e=>{e.exports=JSON.parse('{"pluginId":"crosstalk","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/crosstalk/","docId":"README"},{"type":"link","label":"Overview","href":"/crosstalk/overview","docId":"overview"},{"type":"category","label":"Understanding CrossTalk","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"EVM Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"requestToDest","href":"/crosstalk/understanding-crosstalk/evm_guides/requestToDest","docId":"understanding-crosstalk/evm_guides/requestToDest"},{"type":"link","label":"handleRequestFromSource","href":"/crosstalk/understanding-crosstalk/evm_guides/handleRequestFromSource","docId":"understanding-crosstalk/evm_guides/handleRequestFromSource"},{"type":"link","label":"handleCrossTalkAck","href":"/crosstalk/understanding-crosstalk/evm_guides/handleCrossTalkAck","docId":"understanding-crosstalk/evm_guides/handleCrossTalkAck"},{"type":"category","label":"CrossTalk Utils Library","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"How to Use the CrossTalkUtils Library","href":"/crosstalk/understanding-crosstalk/evm_guides/crosstalkutils-library/how-to-use-the-crosstalkutils-library","docId":"understanding-crosstalk/evm_guides/crosstalkutils-library/how-to-use-the-crosstalkutils-library"},{"type":"link","label":"Helper Functions","href":"/crosstalk/understanding-crosstalk/evm_guides/crosstalkutils-library/helper-functions","docId":"understanding-crosstalk/evm_guides/crosstalkutils-library/helper-functions"}],"href":"/crosstalk/understanding-crosstalk/evm_guides/crosstalkutils-library/"}],"href":"/crosstalk/understanding-crosstalk/evm_guides/"},{"type":"category","label":"Near Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"requestToDest","href":"/crosstalk/understanding-crosstalk/near_guides/requestToDest","docId":"understanding-crosstalk/near_guides/requestToDest"}],"href":"/crosstalk/understanding-crosstalk/near_guides/"},{"type":"link","label":"setDappMetadata","href":"/crosstalk/understanding-crosstalk/setDappMetadata","docId":"understanding-crosstalk/setDappMetadata"},{"type":"link","label":"Chain Types","href":"/crosstalk/understanding-crosstalk/chainTypes","docId":"understanding-crosstalk/chainTypes"}],"href":"/crosstalk/understanding-crosstalk/"},{"type":"category","label":"Different Types of Requests","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"EVM Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Single Call without Acknowledgment","href":"/crosstalk/different-types-of-requests/evm_guides/single-call-without-ack","docId":"different-types-of-requests/evm_guides/single-call-without-ack"},{"type":"link","label":"Single Call with Acknowledgment","href":"/crosstalk/different-types-of-requests/evm_guides/single-call-with-ack","docId":"different-types-of-requests/evm_guides/single-call-with-ack"},{"type":"link","label":"Multiple Calls without Acknowledgment","href":"/crosstalk/different-types-of-requests/evm_guides/multiple-calls-without-ack","docId":"different-types-of-requests/evm_guides/multiple-calls-without-ack"},{"type":"link","label":"Multiple Calls with Acknowledgment","href":"/crosstalk/different-types-of-requests/evm_guides/multiple-calls-with-ack","docId":"different-types-of-requests/evm_guides/multiple-calls-with-ack"}]}],"href":"/crosstalk/category/different-types-of-requests"},{"type":"link","label":"Fee Management","href":"/crosstalk/fee-management","docId":"fee-management"},{"type":"category","label":"Cross-chain Read Requests","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"EVM Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating and Sending a Cross-chain Read Request","href":"/crosstalk/cross-chain-read-requests/evm_guides/creating-and-sending-a-cross-chain-read-request","docId":"cross-chain-read-requests/evm_guides/creating-and-sending-a-cross-chain-read-request"},{"type":"link","label":"Handling the Acknowledgment on the Source Chain","href":"/crosstalk/cross-chain-read-requests/evm_guides/handling-the-acknowledgment-on-the-source-chain","docId":"cross-chain-read-requests/evm_guides/handling-the-acknowledgment-on-the-source-chain"}]},{"type":"category","label":"Near Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating and Sending a Cross-chain Read Request","href":"/crosstalk/cross-chain-read-requests/near_guides/creating-and-sending-a-cross-chain-read-request","docId":"cross-chain-read-requests/near_guides/creating-and-sending-a-cross-chain-read-request"},{"type":"link","label":"Handling the Acknowledgment on the Source Chain","href":"/crosstalk/cross-chain-read-requests/near_guides/handling-the-acknowledgment-on-the-source-chain","docId":"cross-chain-read-requests/near_guides/handling-the-acknowledgment-on-the-source-chain"}]}],"href":"/crosstalk/cross-chain-read-requests/"},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"EVM Guides","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Cross-chain Ping Pong","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using Gateway Contract Directly","href":"/crosstalk/guides/evm_guides/ping-pong-contract/using-gateway-contract","docId":"guides/evm_guides/ping-pong-contract/using-gateway-contract"},{"type":"link","label":"Using Router CrossTalk Utils Library","href":"/crosstalk/guides/evm_guides/ping-pong-contract/using-contract-utils-library","docId":"guides/evm_guides/ping-pong-contract/using-contract-utils-library"}],"href":"/crosstalk/guides/evm_guides/ping-pong-contract/"},{"type":"category","label":"Cross-chain NFT (ERC-1155)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using Gateway Contract Directly","href":"/crosstalk/guides/evm_guides/cross-chain-nft/using-gateway-contract","docId":"guides/evm_guides/cross-chain-nft/using-gateway-contract"},{"type":"link","label":"Using Router CrossTalk Utils Library","href":"/crosstalk/guides/evm_guides/cross-chain-nft/using-contract-utils-library","docId":"guides/evm_guides/cross-chain-nft/using-contract-utils-library"}],"href":"/crosstalk/guides/evm_guides/cross-chain-nft/"}],"href":"/crosstalk/category/evm-guides"}],"href":"/crosstalk/category/guides"}]},"docs":{"cross-chain-read-requests/evm_guides/creating-and-sending-a-cross-chain-read-request":{"id":"cross-chain-read-requests/evm_guides/creating-and-sending-a-cross-chain-read-request","title":"Creating and Sending a Cross-chain Read Request","description":"To create a cross-chain read request, one needs to call the readQueryToDest() function on Router\u2019s Gateway contract with the following parameters:","sidebar":"tutorialSidebar"},"cross-chain-read-requests/evm_guides/handling-the-acknowledgment-on-the-source-chain":{"id":"cross-chain-read-requests/evm_guides/handling-the-acknowledgment-on-the-source-chain","title":"Handling the Acknowledgment on the Source Chain","description":"Once the read request is executed on the destination chain, the requested data is sent along with an acknowledgment to the source chain. To handle the acknowledgment, developers need to include a handleCrossTalkAck() function in their contract. This function will have three parameters, namely:","sidebar":"tutorialSidebar"},"cross-chain-read-requests/near_guides/creating-and-sending-a-cross-chain-read-request":{"id":"cross-chain-read-requests/near_guides/creating-and-sending-a-cross-chain-read-request","title":"Creating and Sending a Cross-chain Read Request","description":"To create a cross-chain read request, one needs to call the readQueryToDest() function on Router\u2019s Gateway contract with the following parameters:","sidebar":"tutorialSidebar"},"cross-chain-read-requests/near_guides/handling-the-acknowledgment-on-the-source-chain":{"id":"cross-chain-read-requests/near_guides/handling-the-acknowledgment-on-the-source-chain","title":"Handling the Acknowledgment on the Source Chain","description":"","sidebar":"tutorialSidebar"},"cross-chain-read-requests/README":{"id":"cross-chain-read-requests/README","title":"Decentralized Cross-chain Read Requests","description":"One of the most underrated, albeit important, aspects of blockchain interoperability is being able to read the state of contracts present on one chain (say chain A) from a different chain (say chain B). A good example of this could be a Soul-bound Token (SBT). Let us assume that every user gets a SBT on chain A, which contains the user\'s Date of Birth (DoB) information. This information can come in handy for multiple dApps that want to restrict users below a particular age. Creating this SBT on multiple chains will not make sense, but having the information of the SBT across multiple chains is essential for dApps to be able to access this information and use it. To achieve this, applications can use Router to generate a decentralized read request between two chains. This request will include (a) the contract state to read on the destination chain (in this case, the user\'s age) and (b) the operation to be performed when the data is received back on the source chain (in this case, it could be to accept/deny user\'s request to access a gambling application).","sidebar":"tutorialSidebar"},"different-types-of-requests/evm_guides/multiple-calls-with-ack":{"id":"different-types-of-requests/evm_guides/multiple-calls-with-ack","title":"Multiple Calls with Acknowledgment","description":"Consider an application that allows users to send multiple messages (pings) from the source chain and receive a message in response (pong) to all those messages from the destination chain. In this case, the requirements are as follows:","sidebar":"tutorialSidebar"},"different-types-of-requests/evm_guides/multiple-calls-without-ack":{"id":"different-types-of-requests/evm_guides/multiple-calls-without-ack","title":"Multiple Calls without Acknowledgment","description":"Consider an application that allows users to transfer multiple ERC20 tokens or messages from one chain to another in the same cross-chain request. In this case, the requirements are as follows:","sidebar":"tutorialSidebar"},"different-types-of-requests/evm_guides/single-call-with-ack":{"id":"different-types-of-requests/evm_guides/single-call-with-ack","title":"Single Call with Acknowledgment","description":"Consider an application that allows users to send a message (ping) from the source chain and receive a message in response (pong) from the destination chain. In this case, the requirements are as follows:","sidebar":"tutorialSidebar"},"different-types-of-requests/evm_guides/single-call-without-ack":{"id":"different-types-of-requests/evm_guides/single-call-without-ack","title":"Single Call without Acknowledgment","description":"Consider an application that allows users to transfer their ERC20 tokens from one chain to another. In this case, the requirements are as follows:","sidebar":"tutorialSidebar"},"fee-management":{"id":"fee-management","title":"Fee Management","description":"Gas and Fee Payer Considerations","sidebar":"tutorialSidebar"},"guides/evm_guides/cross-chain-nft/README":{"id":"guides/evm_guides/cross-chain-nft/README","title":"Cross-chain NFT (ERC-1155)","description":"A sample ERC-1155 contract using Router CrossTalk","sidebar":"tutorialSidebar"},"guides/evm_guides/cross-chain-nft/using-contract-utils-library":{"id":"guides/evm_guides/cross-chain-nft/using-contract-utils-library","title":"Using Router CrossTalk Utils Library","description":"A cross-chain NFT (ERC-1155) contract using Router CrossTalkUtils Library","sidebar":"tutorialSidebar"},"guides/evm_guides/cross-chain-nft/using-gateway-contract":{"id":"guides/evm_guides/cross-chain-nft/using-gateway-contract","title":"Using Gateway Contract Directly","description":"A cross-chain NFT (ERC-1155) contract using Router Gatway contracts","sidebar":"tutorialSidebar"},"guides/evm_guides/ping-pong-contract/README":{"id":"guides/evm_guides/ping-pong-contract/README","title":"Cross-chain Ping Pong","description":"A simple ping pong contract using Router CrossTalk","sidebar":"tutorialSidebar"},"guides/evm_guides/ping-pong-contract/using-contract-utils-library":{"id":"guides/evm_guides/ping-pong-contract/using-contract-utils-library","title":"Using Router CrossTalk Utils Library","description":"A simple ping pong contract using Router CrossTalkUtils Library","sidebar":"tutorialSidebar"},"guides/evm_guides/ping-pong-contract/using-gateway-contract":{"id":"guides/evm_guides/ping-pong-contract/using-gateway-contract","title":"Using Gateway Contract Directly","description":"A simple ping pong contract using Router Gatway contracts","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Overview","description":"Background","sidebar":"tutorialSidebar"},"README":{"id":"README","title":"Introduction","description":"The guides on this page will explain the process of developing on Router\'s CrossTalk framework. This framework leverages Router\'s infrastructure to allow contracts on one chain to send intructions to contracts deployed on some other chain. The framework is structured in a way that it can be integrated seamlessly into your development environment without any overhead. If you\'re new here or you\'re not sure if CrossTalk is compatible with your requirements, check out this guide to figure out the best cross-chain framework for your dApp.","sidebar":"tutorialSidebar"},"understanding-crosstalk/chainTypes":{"id":"understanding-crosstalk/chainTypes","title":"Chain Types","description":"| Chain Type | Value |","sidebar":"tutorialSidebar"},"understanding-crosstalk/evm_guides/crosstalkutils-library/helper-functions":{"id":"understanding-crosstalk/evm_guides/crosstalkutils-library/helper-functions","title":"Helper Functions","description":"toBytes","sidebar":"tutorialSidebar"},"understanding-crosstalk/evm_guides/crosstalkutils-library/how-to-use-the-crosstalkutils-library":{"id":"understanding-crosstalk/evm_guides/crosstalkutils-library/how-to-use-the-crosstalkutils-library","title":"How to Use the CrossTalkUtils Library","description":"1) Import the CrossTalkUtils library in your Contract","sidebar":"tutorialSidebar"},"understanding-crosstalk/evm_guides/crosstalkutils-library/README":{"id":"understanding-crosstalk/evm_guides/crosstalkutils-library/README","title":"CrossTalkUtils Library","description":"To make it easy to integrate Router CrossTalk in your contracts, we have created a CrossTalkUtils plug-and-play library. It gives you the following functionalities:","sidebar":"tutorialSidebar"},"understanding-crosstalk/evm_guides/handleCrossTalkAck":{"id":"understanding-crosstalk/evm_guides/handleCrossTalkAck","title":"handleCrossTalkAck","description":"Once the handleRequestFromSource function is executed, an acknowledgment is generated from Router\'s destination chain Gateway contract, which will specify whether the calls were successful. Since we inherited the ICrossTalkApplication contract, we need to implement a handleCrossTalkAck function in our contract with the following schema.","sidebar":"tutorialSidebar"},"understanding-crosstalk/evm_guides/handleRequestFromSource":{"id":"understanding-crosstalk/evm_guides/handleRequestFromSource","title":"handleRequestFromSource","description":"The cross-chain request initiated from the source chain will deliver the payload to the destination contract address specified in the contractCalls parameter. On the destination contract, a function needs to be implemented to handle this payload:","sidebar":"tutorialSidebar"},"understanding-crosstalk/evm_guides/README":{"id":"understanding-crosstalk/evm_guides/README","title":"EVM Chain CrossTalk Functions","description":"Router\u2019s Gateway contracts have a function named requestToDest that facilitates the transmission of a cross-chain message. Whenever users want to execute a cross-chain request, they can call this function by passing the payload to be transferred from the source to the destination chain along with the required parameters.","sidebar":"tutorialSidebar"},"understanding-crosstalk/evm_guides/requestToDest":{"id":"understanding-crosstalk/evm_guides/requestToDest","title":"requestToDest","description":"By setting the parameters per their requirements, users can use this function to exercise a wide range of functionalities when it comes to cross-chain message passing. These parameters include:","sidebar":"tutorialSidebar"},"understanding-crosstalk/near_guides/README":{"id":"understanding-crosstalk/near_guides/README","title":"Near CrossTalk Functions","description":"Router\u2019s Gateway contracts have a function named requestToDest that facilitates the transmission of a cross-chain message. Whenever users want to execute a cross-chain request, they can call this function by passing the payload to be transferred from the source to the destination chain along with the required parameters.","sidebar":"tutorialSidebar"},"understanding-crosstalk/near_guides/requestToDest":{"id":"understanding-crosstalk/near_guides/requestToDest","title":"requestToDest","description":"","sidebar":"tutorialSidebar"},"understanding-crosstalk/README":{"id":"understanding-crosstalk/README","title":"Understanding CrossTalk","description":"High Level Architecture","sidebar":"tutorialSidebar"},"understanding-crosstalk/setDappMetadata":{"id":"understanding-crosstalk/setDappMetadata","title":"setDappMetadata","description":"- For making cross-chain transactions, you need to pay the fees on the router chain. For this, we have a function setDappMetadata in our gateway contract that takes the address of the fee payer on router chain from which the cross-chain fee will be deducted.","sidebar":"tutorialSidebar"}}}')}}]);