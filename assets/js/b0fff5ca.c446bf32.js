"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[5412],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,g=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(g,s(s({ref:t},u),{},{components:n})):r.createElement(g,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},66947:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"Fetch data using JS",sidebar_position:2},s=void 0,i={unversionedId:"router-scan/fetch-data-using-js",id:"router-scan/fetch-data-using-js",title:"Fetch data using JS",description:"For all the mentioned query examples in the previous section, you can also fetch the data using JS. Below is a code snippet on how data can be fetched using JS.",source:"@site/docs/infra/router-scan/fetch-data-using-js.md",sourceDirName:"router-scan",slug:"/router-scan/fetch-data-using-js",permalink:"/infra/router-scan/fetch-data-using-js",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/infra/router-scan/fetch-data-using-js.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Fetch data using JS",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Fetch data using GQL Playground",permalink:"/infra/router-scan/fetch-data-using-gql-playground"},next:{title:"Application-specific Explorer",permalink:"/infra/category/application-specific-explorer"}},c={},l=[],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"For all the mentioned query examples in the previous section, you can also fetch the data using JS. Below is a code snippet on how data can be fetched using JS."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"const response = await axios.post(\n      API_URL,\n      {\n        query: queryTag,\n        variables: options,\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n")),(0,a.kt)("p",null,"Let\u2019s assume you want to get the data for latest blocks. Here\u2019s how you can define the variables."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"var API_URL = 'https://devnet-explorer-api.routerprotocol.com/gql/query';\n\nvar queryTag = `query getLatestBlocks($limit: Int!, $offset: Int!) {\n    paginatedBlock(sortBy:{_id:desc},limit:$limit,offset:$offset){\n        totalRecords\n        blocks{\n        _id\n        hash\n        proposer\n        txn_count\n        timestamp\n        transactions{\n            _id\n            height\n            sender\n            status\n            receiver\n            timeStamp\n            gasWanted\n            gasUsed\n            fee\n            event_logs\n            success\n        }\n        }\n    }\n    }`\n\nvar options = {\n    limit: 10,\n    offset: 10\n}\n")),(0,a.kt)("p",null,"The queryTag parameter is nothing but the query which was shared in the examples for querying data on GQL UI. So you can reuse the same queries to create your JS code."),(0,a.kt)("p",null,"To read the response you can use the below code snippet."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"console.log(response.data.data.paginatedBlock.totalRecords);\nconsole.log(response.data.data.paginatedBlock.blocks[0].hash);\n")),(0,a.kt)("p",null,"In this way, you can read the data from our explorer using JS as well."))}p.isMDXComponent=!0}}]);