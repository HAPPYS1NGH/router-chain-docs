"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[5005],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=i,g=p["".concat(l,".").concat(d)]||p[d]||f[d]||a;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},84041:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={title:"Benefits",sidebar_position:3,description:"Some benefits of stateful bridging"},o=void 0,s={unversionedId:"message-transfer-via-crosstalk/stateful-bridging/benefits",id:"message-transfer-via-crosstalk/stateful-bridging/benefits",title:"Benefits",description:"Some benefits of stateful bridging",source:"@site/docs/develop/message-transfer-via-crosstalk/stateful-bridging/benefits.md",sourceDirName:"message-transfer-via-crosstalk/stateful-bridging",slug:"/message-transfer-via-crosstalk/stateful-bridging/benefits",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/benefits",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/develop/message-transfer-via-crosstalk/stateful-bridging/benefits.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Benefits",sidebar_position:3,description:"Some benefits of stateful bridging"},sidebar:"tutorialSidebar",previous:{title:"Stateful vs Stateless Bridging",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/stateful-vs-stateless-bridging"},next:{title:"High Level Architecture",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/high-level-architecture"}},l={},c=[],u={toc:c};function f(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Router's stateful bridging (OmniChain) framework is a subset of Router's CrossTalk framework that leverages Router chain's architectural components to allow for the creation of seamless cross-chain applications with custom bridging logic. Some of the benefits of stateful bridging:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"By allowing developers to program their complex logic on just one smart contract on the Router chain, Router's stateful bridging can help reduce code redundancy and save developers' time and effort. "),(0,i.kt)("li",{parentName:"ul"},"With complete control over their application's bridging logic, developers can define the encoding and decoding of dApp data as they see fit, and perform any operation on the data. "),(0,i.kt)("li",{parentName:"ul"},"With middleware contracts (smart contracts on the Router chain), developers can optimize their costs by converting multiple incoming requests to Router chain into a single outgoing request to a destination chain."),(0,i.kt)("li",{parentName:"ul"},"Also, while creating outgoing requests to other chains, the middleware contract can configure the payload in such a way that multiple requests can be generated for different destination chains.")))}f.isMDXComponent=!0}}]);