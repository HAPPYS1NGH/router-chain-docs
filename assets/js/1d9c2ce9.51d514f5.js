"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[5406],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),h=o,f=d["".concat(l,".").concat(h)]||d[h]||u[h]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const i={},a="Your First OmniChain dApp",c={unversionedId:"guides/your-first-omnichain-dapp/README",id:"guides/your-first-omnichain-dapp/README",title:"Your First OmniChain dApp",description:"In this section, we'll provide a step-by-step guide for how users can deploy their first cross-chain dApp that leverages the middleware infra enabled by the Router chain.",source:"@site/docs/omnichain-framework/guides/your-first-omnichain-dapp/README.md",sourceDirName:"guides/your-first-omnichain-dapp",slug:"/guides/your-first-omnichain-dapp/",permalink:"/omnichain-framework/guides/your-first-omnichain-dapp/",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/omnichain-framework/guides/your-first-omnichain-dapp/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/omnichain-framework/category/guides"},next:{title:"1) Setting up Router's EVM Devnet",permalink:"/omnichain-framework/guides/your-first-omnichain-dapp/setting-up-routers-evm-devnet"}},l={},s=[],p={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"your-first-omnichain-dapp"},"Your First OmniChain dApp"),(0,o.kt)("p",null,"In this section, we'll provide a step-by-step guide for how users can deploy their first cross-chain dApp that leverages the middleware infra enabled by the Router chain."),(0,o.kt)("p",null,"Before diving into the guide, it's important to understand Router's ",(0,o.kt)("a",{href:"../high-level-workflow",target:"_blank"},"high-level workflow"),". Once you have gained a basic understanding of how a cross-chain application works on the Router chain, you can read through this guide that will cover the following sections:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Setting up Router's EVM Devnet to deploy and test sample cross-chain applications"),(0,o.kt)("li",{parentName:"ul"},"Deploying a sample application contract (Solidity) on Router's EVM Devnet"),(0,o.kt)("li",{parentName:"ul"},"Deploying a sample bridge contract (CosmWasm) on Router's Alpha Devnet"),(0,o.kt)("li",{parentName:"ul"},"Testing the end-to-end workflow by:",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Sending a random cross-chain message to Router's Gateway contract on the source chain"),(0,o.kt)("li",{parentName:"ol"},"Verifying the state change of the bridge contract following the delivery of the inbound request to the Router chain"),(0,o.kt)("li",{parentName:"ol"},"Verifying the state change of the application contract following the delivery of the outbound request to the destination chain"),(0,o.kt)("li",{parentName:"ol"},"Verifying the state change of the bridge contract following the delivery of the outbound acknowledgment to the Router chain")))),(0,o.kt)("p",null,"At the end of the guide, we'll have two working contracts:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"An application contract on Router's EVM Devnet acting as both the source and destination contract"),(0,o.kt)("li",{parentName:"ol"},"A bridge contract on the Router chain")))}u.isMDXComponent=!0}}]);