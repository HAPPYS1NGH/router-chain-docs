"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[3059],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),y=a,f=d["".concat(s,".").concat(y)]||d[y]||p[y]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},86740:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={title:"Introduction",sidebar_position:1},i="Relayers",l={unversionedId:"relayer/README",id:"relayer/README",title:"Introduction",description:"Basics about relayers on the Router chain",source:"@site/docs/infra/relayer/README.mdx",sourceDirName:"relayer",slug:"/relayer/",permalink:"/infra/relayer/",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/infra/relayer/README.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Relayer",permalink:"/infra/category/relayer"},next:{title:"Relayer Guide",permalink:"/infra/relayer/relayer-guide"}},s={},c=[{value:"Functionalities",id:"functionalities",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"relayers"},"Relayers"),(0,a.kt)("p",null,"Basics about relayers on the Router chain"),(0,a.kt)("p",null,"In the Router system, relayers are permissionless entities that relay executable proposals from the Router chain to a specific\ndestination chain. The Router chain has a set of relayers operated by various third parties, which distributes the\nresponsibility. In the set, each relayer listens to the Router chain and relays data to the\ndestination chains as and when required. These relayers also carry out subsequent actions based on the\nevents that have been transmitted."),(0,a.kt)("h2",{id:"functionalities"},"Functionalities"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The relayer will be able to submit outbound/crosstalk requests to the destination chain."),(0,a.kt)("li",{parentName:"ol"},"The relayer will be able to whitelist application bridge contract addresses and process only outbound requests originating from the whitelisted application bridge contract addresses."),(0,a.kt)("li",{parentName:"ol"},"The relayer will be able to submit a ValsetUpdate request to all the destination chains configured\non the multichain module."),(0,a.kt)("li",{parentName:"ol"},"The relayer will be able to secure the keys of various chain types - EVM, Cosmos, and Substrate,\namong others.")))}p.isMDXComponent=!0}}]);