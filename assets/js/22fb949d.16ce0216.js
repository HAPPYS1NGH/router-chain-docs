"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[5917],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=l(t),d=i,m=f["".concat(s,".").concat(d)]||f[d]||u[d]||a;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},62439:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const a={},o="Design",c={unversionedId:"infra/router-scan/application-specific-explorer/design/README",id:"infra/router-scan/application-specific-explorer/design/README",title:"Design",description:"Structure of an application-specific explorer",source:"@site/docs/tooling/infra/router-scan/application-specific-explorer/design/README.md",sourceDirName:"infra/router-scan/application-specific-explorer/design",slug:"/infra/router-scan/application-specific-explorer/design/",permalink:"/tooling/infra/router-scan/application-specific-explorer/design/",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/tooling/infra/router-scan/application-specific-explorer/design/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/tooling/infra/router-scan/application-specific-explorer/"},next:{title:"Usage",permalink:"/tooling/infra/router-scan/application-specific-explorer/usage/"}},s={},l=[],p={toc:l};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"design"},"Design"),(0,i.kt)("p",null,"Structure of an application-specific explorer"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The following code defines the main class that has a set of functions that will allow applications to get data related to their queries directly."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'const gqlApis = {\n    "testnet":"https://www.routerexplorer.com/gql/testnet",\n    "devnet":"https://www.routerexplorer.com/gql/devnet",\n}\n\nclass RouterExplorer{\n  public readonly chainEnvironment: string\n  public readonly applicationAddress: string\n\n  constructor (chainEnvironment:string,applicationAddress:string) {\n      this.chainEnvironment = chainEnvironment;\n      this.applicationAddress = applicationAddress;\n  }\n    \n    public async getLatestTransactions(timeRange: number[], limit:number, offset:number){\n    // Fetch latest txns\n    }\n\n    public async getTransactionByHash(transactionHash:string){\n    //Fetch a particular txn with txn hash\n    }\n    \n    public async getLatestCrosschains(timeRange: number[], limit:number, offset:number){\n    //Fetch latest cross-chain txns\n    }\n    \n    public async getCrosschainBySearch(searchTerm: String, srcChainIds: string[], dstChainIds: string[], timeRange: number[], limit: Number, offset: Number){\n    // Fetch list of cross-chain txns filtered based on multiple params, only searchTerm is mandatory\n    }\n\n    public async getOutboundsForInbound(inboundId: String) {\n    //Fetch outbound transactions related to an inbound\n    }\n}\n')))}u.isMDXComponent=!0}}]);