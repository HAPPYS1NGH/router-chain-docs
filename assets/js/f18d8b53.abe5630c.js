"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[795],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=l(n),d=a,g=h["".concat(c,".").concat(d)]||h[d]||p[d]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},50170:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"High Level Architecture",sidebar_position:4,description:"Understanding the stateful bridging architecture"},i=void 0,s={unversionedId:"message-transfer-via-crosstalk/stateful-bridging/high-level-architecture",id:"message-transfer-via-crosstalk/stateful-bridging/high-level-architecture",title:"High Level Architecture",description:"Understanding the stateful bridging architecture",source:"@site/docs/develop/message-transfer-via-crosstalk/stateful-bridging/high-level-architecture.md",sourceDirName:"message-transfer-via-crosstalk/stateful-bridging",slug:"/message-transfer-via-crosstalk/stateful-bridging/high-level-architecture",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/high-level-architecture",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/develop/message-transfer-via-crosstalk/stateful-bridging/high-level-architecture.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"High Level Architecture",sidebar_position:4,description:"Understanding the stateful bridging architecture"},sidebar:"tutorialSidebar",previous:{title:"Benefits",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/benefits"},next:{title:"TExchange",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/texchange/"}},c={},l=[{value:"High Level Architecture",id:"high-level-architecture",level:2},{value:"Inbound Workflow",id:"inbound-workflow",level:3},{value:"Outbound Workflow",id:"outbound-workflow",level:3}],u={toc:l};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"high-level-architecture"},"High Level Architecture"),(0,a.kt)("center",null,(0,a.kt)("img",{src:n(62821).Z,alt:"High Level Workflow"})),(0,a.kt)("p",null,"For better understanding of Router's stateful bridging flow between two third-party chains, let us break down the lifecycle of a stateful cross-chain request into two flows - (a) inbound flow, and (b) outbound flow."),(0,a.kt)("h3",{id:"inbound-workflow"},"Inbound Workflow"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1)")," A user initiates a cross-chain action on an application's smart contract on the source chain."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 2)")," The application contract then calls the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"iSend()"))," function on the Router Gateway contract with the relevant parameters."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3)")," The Gateway contract on the source chain emits an event that is listened to by the orchestrators on the Router chain."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 4)")," After the event is validated, the message is sent to the application's bridge contract on the Router chain, where it can implement its custom business logic."),(0,a.kt)("h3",{id:"outbound-workflow"},"Outbound Workflow"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1)")," Once the transaction initiated by the bridge contract is mined on the Router chain, an outbound request is generated."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 2)")," The orchestrators validate the outbound request."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3)")," Once validated, the relayer polling the outbound requests of that particular bridge contract picks up the transaction and forwards the event to the Router Gateway contract on the destination chain."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 4)")," The Gateway contract on the destination chain calls the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"iReceive()"))," function on the application contract on the destination chain."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 5)")," The application contract on the destination chain will take appropriate actions based on the data transferred."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 6)")," After the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"iReceive()"))," function execution is complete on the destination chain, the destination chain's Gateway contract emits an acknowledgment event that is listened to by the orchestrators on the Router chain."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 7)")," The ack is then submitted to the bridge contract ensuring the execution of Outbound Request. Upon receiving the ack, the bridge contract can mark the status of the cross-chain request as completed and take required actions."))}p.isMDXComponent=!0},62821:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/high-level-workflow-ca0164db81fe3f910ffe3b994d82a048.png"}}]);