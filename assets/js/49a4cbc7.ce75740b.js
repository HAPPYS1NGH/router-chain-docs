"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[4263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),h=s,f=d["".concat(c,".").concat(h)]||d[h]||p[h]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},36774:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),s=(n(67294),n(3905));const a={title:"Check the Status",sidebar_position:4},o=void 0,i={unversionedId:"tools/voyager-js-sdk/performing-cross-chain-transaction/check-status",id:"tools/voyager-js-sdk/performing-cross-chain-transaction/check-status",title:"Check the Status",description:"Unlike the Asset Swap API, there is no need to provide chainId while querying the status using the SDK as the chainId is included while initializing the RouterProtocol instance.",source:"@site/docs/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/check-status.md",sourceDirName:"tools/voyager-js-sdk/performing-cross-chain-transaction",slug:"/tools/voyager-js-sdk/performing-cross-chain-transaction/check-status",permalink:"/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/check-status",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/check-status.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Check the Status",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Execute the Transaction",permalink:"/voyager/tools/voyager-js-sdk/performing-cross-chain-transaction/execute-transaction"},next:{title:"Supported Chains",permalink:"/voyager/tools/configurations/supported-chains"}},c={},l=[{value:"Sample Request and Response",id:"sample-request-and-response",level:2},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'const txStatus = await routerprotocol.getTransactionStatus("TXN_HASH")\n')),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Unlike the Asset Swap API, there is no need to provide chainId while querying the status using the SDK as the chainId is included while initializing the RouterProtocol instance.")),(0,s.kt)("h2",{id:"sample-request-and-response"},"Sample Request and Response"),(0,s.kt)("p",null,"Checking the status of a cross-chain transaction from Polygon to Fantom:"),(0,s.kt)("h3",{id:"request"},"Request"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'import { RouterProtocol } from "@routerprotocol/router-js-sdk"\nimport { ethers } from "ethers";\n\nconst main = async() => {\n  \n// fetching the status of the transaction\nsetTimeout(async function() {\n    let status = await routerprotocol.getTransactionStatus(tx.hash) \n    console.log(status)\n    if (status.tx_status_code === 1) {\n        console.log("Transaction completed")\n      // handle the case where the transaction is complete \n    }\n    else if (status.tx_status_code === 0) {\n        console.log("Transaction still pending")\n    // handle the case where the transaction is still pending\n    }\n  }, 180000); // waiting for sometime before fetching the status of the transaction because it may take some time for the transaction to get indexed\n\n}\n\nmain()\n')),(0,s.kt)("h3",{id:"response"},"Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"{\n  tx_status: 'Completed',\n  tx_status_code: 1,\n  src_chain_id: '137',\n  dest_chain_id: '250',\n  src_tx_hash: '0x4f2814d3a5f7f5b5ace3688d901fa0cd1bd65a0d04be4d81eaefcf5afcd4b2ff',\n  dest_tx_hash: '0xc78cf044c0de46bdaedf661d740bbf09e39ad57074eee89f6856812fda06428f'\n}\n")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Response Type"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'interface TransactionStatus{\n  "tx_status":string,\n  "tx_status_code":number,\n  "src_chain_id":string,\n  "dest_chain_id":string,\n  "src_tx_hash":string,\n  "dest_tx_hash":string\n}\n'))))}p.isMDXComponent=!0}}]);