"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[3342],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,k=d["".concat(l,".").concat(m)]||d[m]||c[m]||s;return n?r.createElement(k,o(o({ref:t},p),{},{components:n})):r.createElement(k,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80234:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const s={title:"Installing Prerequisites",sidebar_position:1},o="Installing Prerequisites",i={unversionedId:"installing-prerequisites",id:"installing-prerequisites",title:"Installing Prerequisites",description:"Install Go",source:"@site/docs/router-core/installing-prerequisites.md",sourceDirName:".",slug:"/installing-prerequisites",permalink:"/router-core/installing-prerequisites",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/router-core/installing-prerequisites.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Installing Prerequisites",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/router-core/"},next:{title:"Router CLI",permalink:"/router-core/routerd"}},l={},u=[{value:"Install Go",id:"install-go",level:2},{value:"Set up Rust",id:"set-up-rust",level:2},{value:"IDE",id:"ide",level:2},{value:"Docker",id:"docker",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installing-prerequisites"},"Installing Prerequisites"),(0,a.kt)("h2",{id:"install-go"},"Install Go"),(0,a.kt)("p",null,"If you do not have Go installed in your system, you can set it up by following the three easy steps listed ",(0,a.kt)("a",{parentName:"p",href:"https://go.dev/doc/install"},"here"),". The latest versions of ",(0,a.kt)("inlineCode",{parentName:"p"},"routerd")," require Go version ",(0,a.kt)("inlineCode",{parentName:"p"},"v1.18+"),"."),(0,a.kt)("h2",{id:"set-up-rust"},"Set up Rust"),(0,a.kt)("p",null,"To work with CosmWasm, you'll need to make sure you have ",(0,a.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"rustup")," installed along with a recent ",(0,a.kt)("inlineCode",{parentName:"p"},"rustc")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo")," version installed. Currently, we are testing on ",(0,a.kt)("inlineCode",{parentName:"p"},"1.58.1+"),". We use ",(0,a.kt)("inlineCode",{parentName:"p"},"rustup")," to install rust since it makes maintaining dependencies and handling updates much more efficient."),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("b",null,"Installing Rust on Mac/Linux")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1)")," Install ",(0,a.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"rustup"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 2)")," Once installed, check that you have the correct version installed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rustup default stable\ncargo version\n# If this is lower than 1.58.1+, update\nrustup update stable\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3)")," Once rust is installed, make sure you have the ",(0,a.kt)("inlineCode",{parentName:"p"},"wasm32")," target:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rustup target list --installed\n# if wasm32 is not listed after running the aforementioned command, run the following:\nrustup target add wasm32-unknown-unknown\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("b",null,"Installing Rust on Windows 10")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 1)")," Download and execute ",(0,a.kt)("inlineCode",{parentName:"p"},"rustup-init.exe")," from ",(0,a.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"rustup.rs"),".\nIf prompted, download and install Visual C++ Build Tools 2019, from ",(0,a.kt)("a",{parentName:"p",href:"https://visualstudio.microsoft.com/visual-cpp-build-tools/"},"https://visualstudio.microsoft.com/visual-cpp-build-tools/"),'. Make sure "Windows 10 SDK" and "English language pack" are selected.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 2)")," Once installed, check that you have the correct version installed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rustup default stable\ncargo version\n# If this is lower than 1.58.1+, update\nrustup update stable\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Step 3)")," Once rust is installed, make sure you have the ",(0,a.kt)("inlineCode",{parentName:"p"},"wasm32")," target:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rustup target list --installed\n# if wasm32 is not listed after running the aforementioned command, run the following:\nrustup target add wasm32-unknown-unknowne\n"))),(0,a.kt)("h2",{id:"ide"},"IDE"),(0,a.kt)("p",null,"To develop and test smart contracts using Rust, a good IDE is a must. Currently, ",(0,a.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/download"},"VSCode")," is the best-supported environment for RLS (Rust Language Server). Coupled with the ",(0,a.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer"},"rust-analyzer for the VSCode")," plugin, it makes use of the rust compiler to type-check all your code on each save."),(0,a.kt)("h2",{id:"docker"},"Docker"),(0,a.kt)("p",null,"To optimize production code and make the binary size of compiled CosmWasm contracts as small as possible, we use ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/rust-optimizer"},"rust-optimizer"),", which uses Docker to work. Download and install Docker Desktop for your system using this ",(0,a.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"link"),"."))}c.isMDXComponent=!0}}]);