"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[378],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>d});var n=r(67294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var l=n.createContext({}),s=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},u=function(t){var e=s(t.components);return n.createElement(l.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=s(r),d=o,h=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(h,c(c({ref:e},u),{},{components:r})):n.createElement(h,c({ref:e},u))}));function d(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,c=new Array(a);c[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},85893:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const a={title:"Contracts",sidebar_position:2},c=void 0,i={unversionedId:"texchange/contracts",id:"texchange/contracts",title:"Contracts",description:"Testnet Contracts",source:"@site/docs/omnichain-framework/texchange/contracts.md",sourceDirName:"texchange",slug:"/texchange/contracts",permalink:"/omnichain-framework/texchange/contracts",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/omnichain-framework/texchange/contracts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Contracts",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/omnichain-framework/texchange/architecture"}},l={},s=[{value:"Testnet Contracts",id:"testnet-contracts",level:2},{value:"Router chain Contracts",id:"router-chain-contracts",level:2},{value:"Mainnet Contract",id:"mainnet-contract",level:2}],u={toc:s};function p(t){let{components:e,...r}=t;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"testnet-contracts"},"Testnet Contracts"),(0,o.kt)("p",null," Texchange vault: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/router-protocol/texchange/blob/dev/backend/contracts/Vault.sol"},"https://github.com/router-protocol/texchange/blob/dev/backend/contracts/Vault.sol")),(0,o.kt)("h2",{id:"router-chain-contracts"},"Router chain Contracts"),(0,o.kt)("p",null," Texchange middleware contract: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/router-protocol/texchange/tree/dev/middleware"},"https://github.com/router-protocol/texchange/tree/dev/middleware")),(0,o.kt)("h2",{id:"mainnet-contract"},"Mainnet Contract"),(0,o.kt)("p",null," Texchange mainnet vault: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/router-protocol/texchange/blob/integrate-router/backend/contracts/Vault.sol"},"https://github.com/router-protocol/texchange/blob/integrate-router/backend/contracts/Vault.sol")))}p.isMDXComponent=!0}}]);