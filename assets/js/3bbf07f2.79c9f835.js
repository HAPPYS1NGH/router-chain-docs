"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[7668],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=a,g=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(g,c(c({ref:t},u),{},{components:r})):n.createElement(g,c({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},72064:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={title:"Contracts",sidebar_position:2},c=void 0,s={unversionedId:"message-transfer-via-crosstalk/stateful-bridging/texchange/contracts",id:"message-transfer-via-crosstalk/stateful-bridging/texchange/contracts",title:"Contracts",description:"Testnet Contracts",source:"@site/docs/develop/message-transfer-via-crosstalk/stateful-bridging/texchange/contracts.md",sourceDirName:"message-transfer-via-crosstalk/stateful-bridging/texchange",slug:"/message-transfer-via-crosstalk/stateful-bridging/texchange/contracts",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/texchange/contracts",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/develop/message-transfer-via-crosstalk/stateful-bridging/texchange/contracts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Contracts",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/develop/message-transfer-via-crosstalk/stateful-bridging/texchange/architecture"},next:{title:"Overview",permalink:"/develop/message-transfer-via-crosstalk/sample-idapps/"}},i={},l=[{value:"Testnet Contracts",id:"testnet-contracts",level:2},{value:"Router chain Contracts",id:"router-chain-contracts",level:2}],u={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"testnet-contracts"},"Testnet Contracts"),(0,a.kt)("p",null," Texchange vault on EVM chains: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/router-protocol/texchange/blob/dev/backend/contracts/Vault.sol"},"https://github.com/router-protocol/texchange/blob/dev/backend/contracts/Vault.sol")),(0,a.kt)("h2",{id:"router-chain-contracts"},"Router chain Contracts"),(0,a.kt)("p",null," Texchange middleware contracts: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/router-protocol/texchange/tree/dev/middleware"},"https://github.com/router-protocol/texchange/tree/dev/middleware")))}p.isMDXComponent=!0}}]);