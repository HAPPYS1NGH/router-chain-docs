"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[7982],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>d});var r=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function n(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):n(n({},t),e)),o},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(o),d=a,h=m["".concat(i,".").concat(d)]||m[d]||u[d]||l;return o?r.createElement(h,n(n({ref:t},c),{},{components:o})):r.createElement(h,n({ref:t},c))}));function d(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=o.length,n=new Array(l);n[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,n[1]=s;for(var p=2;p<l;p++)n[p]=o[p];return r.createElement.apply(null,n)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},18544:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>n,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=o(87462),a=(o(67294),o(3905));const l={},n="Submit a Cosmwasm Governance Proposal",s={unversionedId:"local/submit-wasm-proposal",id:"local/submit-wasm-proposal",title:"Submit a Cosmwasm Governance Proposal",description:"The following is a quick guide to provide a basic example on how submit a wasm binary proposal in Osmosis. This particular example will be with localrouter but it can also be used with testnet.",source:"@site/docs/cosmwasm/local/submit-wasm-proposal.md",sourceDirName:"local",slug:"/local/submit-wasm-proposal",permalink:"/cosmwasm/local/submit-wasm-proposal",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/cosmwasm/local/submit-wasm-proposal.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cosmwasm & localrouter",permalink:"/cosmwasm/local/localosmosis"},next:{title:"Cosmwasm & Beaker",permalink:"/cosmwasm/testnet/cosmwasm-beaker"}},i={},p=[{value:"localrouter",id:"localrouter",level:2},{value:"Start localrouter",id:"start-localrouter",level:3},{value:"Download sample contract",id:"download-sample-contract",level:2},{value:"Define variables",id:"define-variables",level:2},{value:"Define proposal ID",id:"define-proposal-id",level:2},{value:"Create local wallet from seed",id:"create-local-wallet-from-seed",level:2},{value:"Submit proposal",id:"submit-proposal",level:2},{value:"Query proposal",id:"query-proposal",level:2},{value:"Deposit on proposal",id:"deposit-on-proposal",level:2},{value:"Vote",id:"vote",level:2},{value:"Check the results",id:"check-the-results",level:2},{value:"Learn more:",id:"learn-more",level:3}],c={toc:p};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"submit-a-cosmwasm-governance-proposal"},"Submit a Cosmwasm Governance Proposal"),(0,a.kt)("p",null,"The following is a quick guide to provide a basic example on how submit a wasm binary proposal in Osmosis. This particular example will be with localrouter but it can also be used with testnet."),(0,a.kt)("h2",{id:"localrouter"},"localrouter"),(0,a.kt)("p",null,"The easiest way to setup your localrouter is by downloading the ",(0,a.kt)("a",{parentName:"p",href:"https://get.osmosis.zone/"},"automated installer"),". You can learn more about localrouter by reading the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/router-protocol/localrouter"},"README")," in the official repo. "),(0,a.kt)("p",null,"Run the following and choose option #3."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -sL https://get.osmosis.zone/install > i.py && python3 i.py\n")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/SybyH7A8q.png",alt:null})),(0,a.kt)("h3",{id:"start-localrouter"},"Start localrouter"),(0,a.kt)("p",null,"Inside a separate bash window start your localrouter which was installed in ~/localrouter"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd ~/localrouter\ndocker-compose up\n\n")),(0,a.kt)("p",null,"You will start seeing localrouter block activity in your terminal. Keep localrouter running while you perform the next steps in a new terminal window."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If you had previously installed localrouter, it's a good idea to start fresh and delete ~/localrouter ",(0,a.kt)("inlineCode",{parentName:"p"},"rm -rf ~/localrouter")," before installing it again.")),(0,a.kt)("h2",{id:"download-sample-contract"},"Download sample contract"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -s -L -O https://github.com/CosmWasm/cw-plus/releases/download/v0.12.1/cw20_base.wasm\n")),(0,a.kt)("h2",{id:"define-variables"},"Define variables"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CHAIN_ID=localrouter\nCONTRACT=cw20_base\n")),(0,a.kt)("h2",{id:"define-proposal-id"},"Define proposal ID"),(0,a.kt)("p",null,"We cannot really do this progamatically. Proposal ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," will come out after submitting it for the first time on a new chain. You can always update this manually when testing multiple times on the same state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"PROPOSAL=1\n")),(0,a.kt)("h2",{id:"create-local-wallet-from-seed"},"Create local wallet from seed"),(0,a.kt)("p",null,"Note that this seed is already part of localrouter as shown ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/router-protocol/localrouter#accounts"},"here"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'echo "satisfy adjust timber high purchase tuition stool faith fine install that you unaware feed domain license impose boss human eager hat rent enjoy dawn" | routerd keys add validator --keyring-backend test --recover\nVAL=$(routerd keys show -a validator --keyring-backend test)\n')),(0,a.kt)("h2",{id:"submit-proposal"},"Submit proposal"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'routerd tx gov submit-proposal wasm-store $CONTRACT.wasm --title "Add $CONTRACT" \\\n  --description "Let\'s upload this contract" --run-as $VAL \\\n  --from validator --keyring-backend test --chain-id $CHAIN_ID -y -b block \\\n  --gas 9000000 --gas-prices 0.025uosmo\n')),(0,a.kt)("h2",{id:"query-proposal"},"Query proposal"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"routerd query gov proposal $PROPOSAL\n")),(0,a.kt)("h2",{id:"deposit-on-proposal"},"Deposit on proposal"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"routerd tx gov deposit $PROPOSAL 10000000uosmo --from validator --keyring-backend test \\\n    --chain-id $CHAIN_ID -y -b block --gas 6000000 --gas-prices 0.025uosmo\n")),(0,a.kt)("h2",{id:"vote"},"Vote"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"routerd tx gov vote $PROPOSAL yes --from validator --keyring-backend test \\\n    --chain-id $CHAIN_ID -y -b block --gas 600000 --gas-prices 0.025uosmo\n")),(0,a.kt)("h2",{id:"check-the-results"},"Check the results"),(0,a.kt)("p",null,"Wait 1 or two minutes for the results to show up. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"routerd query wasm list-code\n")),(0,a.kt)("h3",{id:"learn-more"},"Learn more:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/wasmd/blob/main/x/wasm/Governance.md"},"https://github.com/CosmWasm/wasmd/blob/main/x/wasm/Governance.md")))}u.isMDXComponent=!0}}]);