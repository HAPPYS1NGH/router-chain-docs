"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[6567],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),h=p(n),d=o,f=h["".concat(c,".").concat(d)]||h[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},59468:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"Execute the Transaction",sidebar_position:3},i=void 0,s={unversionedId:"tools/voyager-pathFinder-api/performing-cross-chain-transaction/execute-transaction",id:"tools/voyager-pathFinder-api/performing-cross-chain-transaction/execute-transaction",title:"Execute the Transaction",description:"Now that we have received the quote and given allowance to Router's Reserve Token Handler, it's time to execute the transaction.",source:"@site/docs/voyager/tools/voyager-pathFinder-api/performing-cross-chain-transaction/execute-transaction.md",sourceDirName:"tools/voyager-pathFinder-api/performing-cross-chain-transaction",slug:"/tools/voyager-pathFinder-api/performing-cross-chain-transaction/execute-transaction",permalink:"/voyager/tools/voyager-pathFinder-api/performing-cross-chain-transaction/execute-transaction",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/voyager/tools/voyager-pathFinder-api/performing-cross-chain-transaction/execute-transaction.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Execute the Transaction",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Check and Set Allowances",permalink:"/voyager/tools/voyager-pathFinder-api/performing-cross-chain-transaction/check-set-allowance"},next:{title:"Check the Status",permalink:"/voyager/tools/voyager-pathFinder-api/performing-cross-chain-transaction/check-status"}},c={},p=[],l={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Now that we have received the quote and given allowance to Router's Reserve Token Handler, it's time to execute the transaction."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { ethers } from \'ethers\'\n    \nconst main = async () => {\n    // getting pathfinder response using the code given in Step 1\n    const pathfinder_response = await fetchPathfinderData(args)\n    \n    // setting up a signer\n    const provider = new ethers.providers.JsonRpcProvider("https://polygon-rpc.com", 137);\n    // use provider.getSigner() method to get a signer if you\'re using this for a UI\n    const wallet = new ethers.Wallet("YOUR_PRIVATE_KEY", provider)\n    \n    // setting the gas price and limit\n    if(!pathfinder_response.txn.execution.gasPrice){\n        pathfinder_response.txn.execution.gasPrice = await wallet.provider.getGasPrice()\n    }\n\n    if(pathfinder_response.txn.execution.value){\n        pathfinder_response.txn.execution.value = ethers.utils.hexlify(ethers.BigNumber.from(pathfinder_response.txn.execution.value))\n    }\n    \n    if(!pathfinder_response.txn.execution.gasLimit){\n        pathfinder_response.txn.execution.gasLimit = ethers.utils.hexlify(ethers.BigNumber.from(1000000))\n    }\n    \n    // sending the transaction using the data given by the pathfinder\n    const tx = await wallet.sendTransaction(pathfinder_response.txn.execution)\n    try {\n        await tx.wait();\n        console.log(`Transaction mined successfully: ${tx.hash}`)\n    }\n    catch (error) {\n        console.log(`Transaction failed with error: ${error}`)\n    }\n}\n\nmain()\n')))}u.isMDXComponent=!0}}]);