"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[8204],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>p});var a=n(67294);function A(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){A(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,A=function(e,t){if(null==e)return{};var n,a,A={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(A[n]=e[n]);return A}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(A[n]=e[n])}return A}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,A=e.mdxType,s=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=c(n),p=A,h=d["".concat(i,".").concat(p)]||d[p]||u[p]||s;return n?a.createElement(h,r(r({ref:t},l),{},{components:n})):a.createElement(h,r({ref:t},l))}));function p(e,t){var n=arguments,A=t&&t.mdxType;if("string"==typeof e||A){var s=n.length,r=new Array(s);r[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:A,r[1]=o;for(var c=2;c<s;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},29936:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=n(87462),A=(n(67294),n(3905));const s={title:"Fetch data using GQL Playground",sidebar_position:1},r="How to fetch data using GQL Playground",o={unversionedId:"infra/router-scan/fetch-data-using-gql-playground",id:"infra/router-scan/fetch-data-using-gql-playground",title:"Fetch data using GQL Playground",description:'Users can experiment with the GraphQL queries by accessing the provided link - https://explorer-api.testnet.routerchain.dev/gql. The "Docs" section, located in the top-right corner of the page, can be referenced for guidance, and users can explore the different available query endpoints.',source:"@site/docs/tooling/infra/router-scan/fetch-data-using-gql-playground.md",sourceDirName:"infra/router-scan",slug:"/infra/router-scan/fetch-data-using-gql-playground",permalink:"/tooling/infra/router-scan/fetch-data-using-gql-playground",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/tooling/infra/router-scan/fetch-data-using-gql-playground.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Fetch data using GQL Playground",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"RouterScan",permalink:"/tooling/infra/router-scan/"},next:{title:"Fetch data using JS",permalink:"/tooling/infra/router-scan/fetch-data-using-js"}},i={},c=[{value:"Overview",id:"overview",level:3},{value:"To get the latest blocks",id:"to-get-the-latest-blocks",level:3},{value:"To get a specific block\u2019s data",id:"to-get-a-specific-blocks-data",level:3},{value:"Overview",id:"overview-1",level:3},{value:"To get the latest transactions data",id:"to-get-the-latest-transactions-data",level:3},{value:"To get a specific transaction\u2019s data",id:"to-get-a-specific-transactions-data",level:3},{value:"Overview",id:"overview-2",level:3},{value:"To get the latest cross-chain transaction data",id:"to-get-the-latest-cross-chain-transaction-data",level:3},{value:"Search for specific cross-chain transaction data",id:"search-for-specific-cross-chain-transaction-data",level:3}],l={toc:c};function u(e){let{components:t,...s}=e;return(0,A.kt)("wrapper",(0,a.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,A.kt)("h1",{id:"how-to-fetch-data-using-gql-playground"},"How to fetch data using GQL Playground"),(0,A.kt)("p",null,"Users can experiment with the GraphQL queries by accessing the provided link - ",(0,A.kt)("a",{parentName:"p",href:"https://explorer-api.testnet.routerchain.dev/gql"},"https://explorer-api.testnet.routerchain.dev/gql"),'. The "Docs" section, located in the top-right corner of the page, can be referenced for guidance, and users can explore the different available query endpoints.'),(0,A.kt)("p",null,(0,A.kt)("img",{alt:"gql-playground.svg",src:n(70661).Z,width:"1429",height:"728"})),(0,A.kt)("details",null,(0,A.kt)("summary",null,(0,A.kt)("b",null,"Blocks")),(0,A.kt)("h3",{id:"overview"},"Overview"),(0,A.kt)("p",null,"To query block data, one can utilize the blocks query. Sample queries are provided below to demonstrate how desired block data can be fetched using GraphQL."),(0,A.kt)("h3",{id:"to-get-the-latest-blocks"},"To get the latest blocks"),(0,A.kt)("p",null,'To obtain the most recent blocks from the explorer, one can utilize the provided query. The parameters "offset" and "limit" can be passed as necessary to obtain the desired outcome.'),(0,A.kt)("admonition",{type:"tip"},(0,A.kt)("p",{parentName:"admonition"},'The parameters can be set in the \u201cQuery Variables\u201d section on the GraphQL playground. An example to set the parameters is as below - {"limit": 1, "offset": 1}')),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Request")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},"query getLatestBlocks($limit: Int!, $offset: Int!) {\n  paginatedBlock(sortBy:{_id:desc},limit:$limit,offset:$offset){\n    totalRecords\n    blocks{\n      _id\n      hash\n      proposer\n      txn_count\n      timestamp\n      transactions{\n         _id\n        height\n        sender\n        status\n        receiver\n        timeStamp\n        gasWanted\n        gasUsed\n        fee\n        event_logs\n        success\n      }\n    }\n  }\n}\n")),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Response")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "data": {\n    "paginatedBlock": {\n      "totalRecords": 15641,\n      "blocks": [\n        {\n          "_id": 15641,\n          "hash": "1C6BC272B52029A27D574A9E68269E9079A6E33AD4DBC3B4754874CE6EE4B0E6",\n          "proposer": "4EC53962072D60BE17C849C98902EC05B22076E4",\n          "txn_count": 0,\n          "timestamp": "2023-01-02T08:55:57Z",\n          "transactions": []\n        }\n      ]\n    }\n  }\n}\n')),(0,A.kt)("h3",{id:"to-get-a-specific-blocks-data"},"To get a specific block\u2019s data"),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Request")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},"query getBlockByHeight($height: Int!){\n  block(_id:$height){\n    _id\n    hash\n    proposer\n    txn_count\n    timestamp\n  }\n}\n")),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Response")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "data": {\n    "block": {\n      "_id": 1234,\n      "hash": "92144B399796060CF32831077D34C5F3F67275E57572218B5BFC9BEDDDD0F44B",\n      "proposer": "12B6CFEA58C5A3BC8CB194F4AE4E4610827083FC",\n      "txn_count": 0,\n      "timestamp": "2023-01-02T01:30:33Z"\n    }\n  }\n}\n'))),(0,A.kt)("details",null,(0,A.kt)("summary",null,(0,A.kt)("b",null,"Transactions")),(0,A.kt)("h3",{id:"overview-1"},"Overview"),(0,A.kt)("p",null,"To query transaction data, one can refer to the provided examples below."),(0,A.kt)("h3",{id:"to-get-the-latest-transactions-data"},"To get the latest transactions data"),(0,A.kt)("p",null,'To obtain the most recent transactions from the explorer, the following query can be utilized. The parameters "offset" and "limit" can be passed as necessary to obtain the desired outcome.'),(0,A.kt)("admonition",{type:"tip"},(0,A.kt)("p",{parentName:"admonition"},'The parameters can be set in the \u201cQuery Variables\u201d section on the GraphQL playground. An example to set the parameters is as below -\n{"limit": 1, "offset": 1}')),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Request")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},"query getLatestTransactions($limit: Int!, $offset: Int!){\n    paginatedTransaction(sortBy:{height:desc,timeStamp:desc},limit:$limit,offset:$offset){\n    totalRecords\n  transactions{\n     _id\n    height\n    sender\n    status\n    receiver\n    timeStamp\n    gasWanted\n    gasUsed\n    fee\n    event_logs\n    success\n    rawLog\n    routePrice\n  }\n  }\n}\n")),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Response")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "data": {\n    "paginatedTransaction": {\n      "totalRecords": 17,\n      "transactions": [\n        {\n          "_id": "4BB9D33522003683D23AF08A463248B77A65F0992C8FFAD730BD6F766B261E27",\n          "height": 12886,\n          "sender": "router1hvaau9fkk4xssmqe455mfujzd2hs6jnsy0rcdj",\n          "status": "",\n          "receiver": "router1gmj4z4vr3rn8ptzcumyycp6eegkuhehrlzlws2",\n          "timeStamp": "2023-01-02T07:30:46Z",\n          "gasWanted": "",\n          "gasUsed": "",\n          "fee": "100000000000000router",\n          "event_logs": "",\n          "success": "",\n          "rawLog": "[{\\"events\\":[{\\"type\\":\\"coin_received\\",\\"attributes\\":[{\\"key\\":\\"receiver\\",\\"value\\":\\"router1gmj4z4vr3rn8ptzcumyycp6eegkuhehrlzlws2\\"},{\\"key\\":\\"amount\\",\\"value\\":\\"1000000000000000000router\\"}]},{\\"type\\":\\"coin_spent\\",\\"attributes\\":[{\\"key\\":\\"spender\\",\\"value\\":\\"router1hvaau9fkk4xssmqe455mfujzd2hs6jnsy0rcdj\\"},{\\"key\\":\\"amount\\",\\"value\\":\\"1000000000000000000router\\"}]},{\\"type\\":\\"message\\",\\"attributes\\":[{\\"key\\":\\"action\\",\\"value\\":\\"/cosmos.bank.v1beta1.MsgSend\\"},{\\"key\\":\\"sender\\",\\"value\\":\\"router1hvaau9fkk4xssmqe455mfujzd2hs6jnsy0rcdj\\"},{\\"key\\":\\"module\\",\\"value\\":\\"bank\\"}]},{\\"type\\":\\"transfer\\",\\"attributes\\":[{\\"key\\":\\"recipient\\",\\"value\\":\\"router1gmj4z4vr3rn8ptzcumyycp6eegkuhehrlzlws2\\"},{\\"key\\":\\"sender\\",\\"value\\":\\"router1hvaau9fkk4xssmqe455mfujzd2hs6jnsy0rcdj\\"},{\\"key\\":\\"amount\\",\\"value\\":\\"1000000000000000000router\\"}]}]}]",\n          "routePrice": "1.7062257784837516"\n        }\n      ]\n    }\n  }\n}\n')),(0,A.kt)("h3",{id:"to-get-a-specific-transactions-data"},"To get a specific transaction\u2019s data"),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Request")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},"query getTransactionByHash($hash: String!){\n  transaction(_id:$hash){\n      _id\n      height\n      sender\n      status\n      receiver\n      timeStamp\n      gasWanted\n      gasUsed\n      fee\n      event_logs\n      success\n  }\n}\n")),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Response")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "data": {\n    "transaction": {\n      "_id": "4BB9D33522003683D23AF08A463248B77A65F0992C8FFAD730BD6F766B261E27",\n      "height": 12886,\n      "sender": "router1hvaau9fkk4xssmqe455mfujzd2hs6jnsy0rcdj",\n      "status": "",\n      "receiver": "router1gmj4z4vr3rn8ptzcumyycp6eegkuhehrlzlws2",\n      "timeStamp": "2023-01-02T07:30:46Z",\n      "gasWanted": "",\n      "gasUsed": "",\n      "fee": "100000000000000router",\n      "event_logs": "",\n      "success": ""\n    }\n  }\n}\n'))),(0,A.kt)("details",null,(0,A.kt)("summary",null,(0,A.kt)("b",null,"Cross-chain Transactions")),(0,A.kt)("h3",{id:"overview-2"},"Overview"),(0,A.kt)("p",null,"To query the data for cross-chain transactions, one can refer to the provided examples below."),(0,A.kt)("h3",{id:"to-get-the-latest-cross-chain-transaction-data"},"To get the latest cross-chain transaction data"),(0,A.kt)("p",null,'To obtain the most recent cross-chain transactions from the explorer, utilize the following query. The parameters "offset" and "limit" can be adjusted according to your requirements to obtain the desired result.'),(0,A.kt)("admonition",{type:"tip"},(0,A.kt)("p",{parentName:"admonition"},'The parameters can be set in the \u201cQuery Variables\u201d section on the GraphQL playground. An example to set the parameters is as below -\n{"limit": 1, "offset": 1}')),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Request")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},"query getLatestCrosschainTransactions($limit: Int!, $offset: Int!){\n    paginatedCrosschain(sortBy:{blockHeight:desc},limit:$limit,offset:$offset){\n    totalRecords\n    crosschains {\n      id\n      blockHeight\n      attestationId\n      srcChainId\n      srcTimestamp\n      sourceTxHash\n      srcTxOrigin\n      requestSender\n      requestPacket {\n        handler\n        payload\n      }\n      requestMetadata {\n        destGasLimit\n      }\n      destChainId\n      destinationTxHash\n      execStatus\n      execData\n      status\n      historyStatus{\n        status\n        txnHash\n        timestamp\n      }\n      destTxFeeInRoute\n      refundFeeInRoute\n      relayerFeeInRoute\n    }\n  }\n}\n")),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Response")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "data": {\n    "paginatedCrosschain": {\n      "totalRecords": 8,\n      "crosschains": [\n        {\n          "id": "80001-15",\n          "blockHeight": 35612839,\n          "attestationId": "",\n          "srcChainId": "80001",\n          "srcTimestamp": 1684132183,\n          "sourceTxHash": "0xf659447c47ef79631f459658c2f6470a692b078ddce9bead568bc9ac12444b37",\n          "srcTxOrigin": "0xAb771C0e0C33b8794BdE3a79568D829De399C094",\n          "requestSender": "0x862f75cB828B21c9A2F406EEb7F5263C1E012700",\n          "requestPacket": {\n            "handler": "0xf57b1b6deB93b9aa73831cE896C427002E340Fe7",\n            "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESG9sYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"\n          },\n          "requestMetadata": {\n            "destGasLimit": 1000000\n          },\n          "destChainId": "43113",\n          "destinationTxHash": "0x6211f212d951fb50a0e0d6607dd51adde8790d003093968cacdbc6f9cedba996",\n          "execStatus": true,\n          "execData": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESG9sYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",\n          "status": "CROSSCHAIN_REQUEST_COMPLETED",\n          "historyStatus": [\n            {\n              "status": "CROSSCHAIN_REQUEST_CREATED",\n              "txnHash": "C3CF071C5B00610737E64342DC718AACF570C553516483C8F664B57E2150947F",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "C3CF071C5B00610737E64342DC718AACF570C553516483C8F664B57E2150947F",\n              "timestamp": 1684132193\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "F649961F8489EA6F47B6506CC5D76DF043897255744AB7BC38A4366608B1F8BB",\n              "timestamp": 1684132193\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "748DFD51B7B4F91C9492E9EF08811DE97F6B5D5B159997D2DA33936454CABFE8",\n              "timestamp": 1684132203\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_OBSERVED",\n              "txnHash": "",\n              "timestamp": 1684132203\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_READY_TO_EXECUTE",\n              "txnHash": "",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "9CF59274D5AB0ADCBCAB0A9CB84754C918781FE28F950EB98FB1D160FCF4E586",\n              "timestamp": 1684132214\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_EXECUTED",\n              "txnHash": "",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_FEE_SETTLEMENT",\n              "txnHash": "",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_COMPLETED",\n              "txnHash": "",\n              "timestamp": 1684132321\n            }\n          ],\n          "destTxFeeInRoute": "163868613138686131",\n          "refundFeeInRoute": "118855979562043796",\n          "relayerFeeInRoute": "45012633576642335"\n        }\n      ]\n    }\n  }\n}\n')),(0,A.kt)("h3",{id:"search-for-specific-cross-chain-transaction-data"},"Search for specific cross-chain transaction data"),(0,A.kt)("p",null,"If there is a need to search for specific cross-chain transactions using different parameters, the provided sample query can be used. Conditions can be added or removed as per the requirement."),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Request")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},"query getCrosschainTransactionBySrcTxnHash($searchTerm: String!, $limit: Int!, $offset: Int!){\n  paginatedCrosschain (where_or:{sourceTxHash:$searchTerm,requestSender:$searchTerm},sortBy:{blockHeight:desc},limit:$limit,offset:$offset){\n    crosschains {\n      id\n      blockHeight\n      attestationId\n      srcChainId\n      srcTimestamp\n      sourceTxHash\n      srcTxOrigin\n      requestSender\n      requestPacket {\n        handler\n        payload\n      }\n      requestMetadata {\n        destGasLimit\n      }\n      destChainId\n      destinationTxHash\n      execStatus\n      execData\n      status\n      historyStatus{\n        status\n        txnHash\n        timestamp\n      }\n      destTxFeeInRoute\n      refundFeeInRoute\n      relayerFeeInRoute\n    }\n  }\n}\n")),(0,A.kt)("p",null,(0,A.kt)("strong",{parentName:"p"},"Response")),(0,A.kt)("pre",null,(0,A.kt)("code",{parentName:"pre",className:"language-jsx"},'{\n  "data": {\n    "paginatedCrosschain": {\n      "crosschains": [\n        {\n          "id": "80001-15",\n          "blockHeight": 35612839,\n          "attestationId": "",\n          "srcChainId": "80001",\n          "srcTimestamp": 1684132183,\n          "sourceTxHash": "0xf659447c47ef79631f459658c2f6470a692b078ddce9bead568bc9ac12444b37",\n          "srcTxOrigin": "0xAb771C0e0C33b8794BdE3a79568D829De399C094",\n          "requestSender": "0x862f75cB828B21c9A2F406EEb7F5263C1E012700",\n          "requestPacket": {\n            "handler": "0xf57b1b6deB93b9aa73831cE896C427002E340Fe7",\n            "payload": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESG9sYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"\n          },\n          "requestMetadata": {\n            "destGasLimit": 1000000\n          },\n          "destChainId": "43113",\n          "destinationTxHash": "0x6211f212d951fb50a0e0d6607dd51adde8790d003093968cacdbc6f9cedba996",\n          "execStatus": true,\n          "execData": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESG9sYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",\n          "status": "CROSSCHAIN_REQUEST_COMPLETED",\n          "historyStatus": [\n            {\n              "status": "CROSSCHAIN_REQUEST_CREATED",\n              "txnHash": "C3CF071C5B00610737E64342DC718AACF570C553516483C8F664B57E2150947F",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "C3CF071C5B00610737E64342DC718AACF570C553516483C8F664B57E2150947F",\n              "timestamp": 1684132193\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "F649961F8489EA6F47B6506CC5D76DF043897255744AB7BC38A4366608B1F8BB",\n              "timestamp": 1684132193\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "748DFD51B7B4F91C9492E9EF08811DE97F6B5D5B159997D2DA33936454CABFE8",\n              "timestamp": 1684132203\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_OBSERVED",\n              "txnHash": "",\n              "timestamp": 1684132203\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_READY_TO_EXECUTE",\n              "txnHash": "",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_CONFIRMED",\n              "txnHash": "9CF59274D5AB0ADCBCAB0A9CB84754C918781FE28F950EB98FB1D160FCF4E586",\n              "timestamp": 1684132214\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_EXECUTED",\n              "txnHash": "",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_FEE_SETTLEMENT",\n              "txnHash": "",\n              "timestamp": 0\n            },\n            {\n              "status": "CROSSCHAIN_REQUEST_COMPLETED",\n              "txnHash": "",\n              "timestamp": 1684132321\n            }\n          ],\n          "destTxFeeInRoute": "163868613138686131",\n          "refundFeeInRoute": "118855979562043796",\n          "relayerFeeInRoute": "45012633576642335"\n        }\n      ]\n    }\n  }\n}\n'))))}u.isMDXComponent=!0},70661:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/gql-plyground-query-6731c2a008d961cdb7fc059fc4e868b5.png"}}]);